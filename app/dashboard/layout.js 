"use client";

import { useState, useEffect } from "react";
import Link from "next/link";
import { Menu, X, ChevronLeft, ChevronRight, ChartLine } from "lucide-react";

export default function DashboardLayout({ children }) {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [collapsed, setCollapsed] = useState(false);

  // gÃ¶rÃ¼nÃ¼r test iÅŸareti
  useEffect(() => {
    console.log("ðŸš€ DashboardLayout mounted");
  }, []);

  return (
    <div data-testid="ia-layout" className="min-h-screen bg-slate-50">
      {/* TEST BARI: KIRMIZI ÅžERÄ°T */}
      <div className="bg-red-600 text-white text-xs px-3 py-1">LAYOUT OK</div>

      {/* Topbar */}
      <header className="sticky top-0 z-40 bg-white/80 backdrop-blur border-b border-slate-200">
        <div className="mx-auto max-w-7xl px-3 sm:px-4 py-3 flex items-center gap-3">
          <button className="lg:hidden p-2 rounded-xl hover:bg-slate-100" onClick={() => setSidebarOpen(true)}>
            <Menu className="h-5 w-5" />
          </button>
          <div className="flex items-center gap-2 font-semibold text-slate-800">
            <div className="h-9 w-9 rounded-2xl bg-slate-900 text-white grid place-items-center">IA</div>
            <span>Ä°nÅŸaat AI</span>
          </div>
        </div>
      </header>

      <div className="mx-auto max-w-7xl px-3 sm:px-4 py-4 grid grid-cols-12 gap-4">
        {/* Desktop sidebar (sade) */}
        <aside className={`hidden lg:block ${collapsed ? "lg:col-span-1" : "lg:col-span-2"}`}>
          <div className="sticky top-20">
            <button
              onClick={() => setCollapsed(!collapsed)}
              className="mb-2 w-full flex items-center justify-between rounded-xl border border-slate-200 bg-white px-3 py-2 text-xs"
            >
              <span className={collapsed ? "hidden" : ""}>MenÃ¼</span>
              {collapsed ? <ChevronRight className="h-4 w-4" /> : <ChevronLeft className="h-4 w-4" />}
            </button>
            <nav className="space-y-1">
              <Link href="/dashboard" className="block rounded-xl px-3 py-2 text-sm hover:bg-slate-100">
                <span className="inline-flex items-center gap-2"><ChartLine className="h-4 w-4" />Ã–zet</span>
              </Link>
            </nav>
          </div>
        </aside>

        {/* Sayfa iÃ§eriÄŸi */}
        <main className={`col-span-12 ${collapsed ? "lg:col-span-11" : "lg:col-span-10"}`}>{children}</main>
      </div>

      {/* Mobile drawer (sade) */}
      {sidebarOpen && (
        <>
          <div className="fixed inset-0 z-50 bg-black/40 lg:hidden" onClick={() => setSidebarOpen(false)} />
          <aside className="fixed inset-y-0 left-0 z-50 w-72 bg-white shadow-xl p-4 lg:hidden">
            <button className="p-2 rounded-xl hover:bg-slate-100 mb-2" onClick={() => setSidebarOpen(false)}>
              <X className="h-5 w-5" />
            </button>
            <Link href="/dashboard" className="block rounded-xl px-3 py-2 text-sm hover:bg-slate-100">Ã–zet</Link>
          </aside>
        </>
      )}
    </div>
  );
}
